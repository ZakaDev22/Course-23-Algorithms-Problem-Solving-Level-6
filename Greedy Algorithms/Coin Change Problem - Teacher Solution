
using System;
using System.Collections.Generic;


class Program
{
    static void Main()
    {
        //// Define the coin denominations in an array.
        //int[] coins = { 1, 5, 10, 20, 50, 100 };


        // Define the coin denominations in a list.
        List<int> coins = new List<int> { 1, 5, 10, 20, 50, 100 };


        
        
        // Define the total amount for which change is needed.
        int amount = 33;


        // Call the MinCoins function to compute the minimum coins needed.
        List<int> result = MinCoins(coins, amount);


        // Output the coins used to make the total amount.
        Console.WriteLine("Coins used to form total:");
        short TotalCoins = 0;


        foreach (var coin in result)
        {
            Console.WriteLine(coin);
            TotalCoins++;
        }
        Console.WriteLine("\nTotal Given Coins = " + TotalCoins );
        // Wait for a key press before closing the console window.
        Console.ReadKey();
    }


    // Function to determine the minimum number of coins needed to make the given amount.
    static List<int> MinCoins(List<int> coins, int amount)
    {


        // Sort the list in descending order.
        coins.Sort((a, b) => b.CompareTo(a));


        // List to store the result of the coins used.
        List<int> result = new List<int>();


        // Iterate over each coin denomination starting from the largest to the smallest.
        foreach (int coin in coins)
        {
            // Keep using this coin denomination until it can no longer be used without exceeding the amount.
            while (amount >= coin)
            {
                // Reduce the amount by the denomination value.
                amount -= coin;
                // Add the coin to the result list.
                result.Add(coin);
            }
        }
        // Return the list of coins that collectively sum up to the original amount.
        return result;
    }
}
